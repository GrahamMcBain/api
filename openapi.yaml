# This is the Moov API OpenAPI specification.
#
# The purpose of this document is to provide a specification for the Moov API from a user's
# point of view. This means viewing the services combined under https://api.moov.io (or another
# URL).
#
# If you're working on internal service calls you may or may not be able to use a generated
# client from this document.
#
# Docs: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md
#
# TODO amount fields now take a currency code. USD default
#  - Look at https://godoc.org/golang.org/x/text/currency
#
# TODO GET endpoints should use the OAS 3 Link Object specification
#  - https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#linkObject
#
# TODO Transfers objects now have an estimated ?posting? date
# TODO add Documents allowing Receiver ID(passport, drivers license, idCard) to be uploaded and verified
# TODO Webhooks have been documented for retrieving events
# TODO add support for retrieving 1099-k for Originators
#
# Property names must conform to the following guidelines:
# - Resources are plural nouns (i.e. /receivers/)
# - Property names should be meaningful names with defined semantics.
# - Property names must be camel-cased, ASCII strings.
# - The first character must be a letter, an underscore (_) or a dollar sign ($).
# - Subsequent characters can be a letter, a digit, an underscore, or a dollar sign.
# - Reserved JavaScript keywords should be avoided
#
# See: https://swagger.io/docs/specification/using-ref/#escape
# This page documents what characters escape others and which are useful for URI encoding $ref values.

openapi: "3.0.2"
info:
  description: |
    _Note_: The Moov API and services are under development and could introduce breaking changes while reaching a stable status. We are looking for community feedback so please try out our code, [join the slack organization](https://slack.moov.io/) and give us some feedback! We announce releases on the [mailing list](https://groups.google.com/forum/#!forum/moov-users).

    The Moov API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our API has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. We support [cross-origin resource sharing](http://en.wikipedia.org/wiki/Cross-origin_resource_sharing), allowing you to interact securely with our API from client-side web applications (never expose your secret API key in any public website's client-side code). [JSON](http://www.json.org/) is returned by all API responses, including errors, although you can generate client code via [OpenAPI code generation](https://github.com/OpenAPITools/openapi-generator) or the [OpenAPI editor](https://editor.swagger.io/) to convert responses to appropriate language-specific objects.

    The Moov API offers two methods of authentication, Cookie and OAuth2 access tokens. The cookie auth is designed for web browsers while the OAuth2 authentication is designed for automated access of our API.

    When an API requires a token generated using OAuth (2-legged), no end user is involved. You generate the token by passing your client credentials (Client ID and Client Secret) in a simple call to Create access token (`/oauth2/token`). The operation returns a token that is valid for a few hours and can be renewed; when it expires, you just repeat the call and get a new token. Making additional token requests will keep generating tokens. There are no hard or soft limits.

    Cookie auth is setup by provided (`/users/login`) a valid email and password combination. A `Set-Cookie` header is returned on success, which can be used in later calls. Cookie auth is required to generate OAuth2 client credentials.

    The following order of API operations is suggested to start developing against the Moov API:

    1. [Create a Moov API user](#operation/createUser) with a unique email address
    1. [Login with user/password credentials](#operation/userLogin)
    1. [Create an OAuth2 client](#operation/createOAuth2Client) and [Generate an OAuth access token](#operation/createOAuth2Token)
    1. Using the OAuth credentials create:
       - [Originator](#operation/addOriginator) and [Originator Depository](#operation/addDepository) (requires micro deposit setup)
       - [Receiver](#operation/addReceivers) and [Receiver Depository](#operation/addDepository) (requires micro deposit setup)
    1. [Submit the Transfer](#operation/addTransfer)

    After signup clients can [submit ACH files](#operation/addFile) (either in JSON or plaintext) for [validation](#operation/validateFile) and [tabulation](#operation/getFileContents).

    The Moov API offers many services:
    - Automated Clearing House (ACH) origination and file management
    - Transfers and ACH Receiver management
    - Image Cash Ledger (ICL) file creation and modification API
    - Fed WIRE file creation and modification API

    ACH is implemented a RESTful API enabling ACH transactions to be submitted and received without a deep understanding of a full NACHA file specification.

    An `Originator` can initiate a `Transfer` as either a push (credit) or pull (debit) to a `Receiver`. Originators and Receivers must have a valid `Depository` account for a `Transfer`. A `Transfer` is initiated by an `Originator` to a `Receiver` with an amount and flow of funds.

    If you find a security related problem please contact us at [`security@moov.io`](mailto:security@moov.io).
  version: "v1"
  title: "Moov API"
  contact:
    email: security@moov.io
    url: "https://groups.google.com/forum/#!forum/moov-users"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  x-logo:
    url: 'https://moov.io/images/logo.png'
    altText: Moov logo
servers:
  - url: https://api.moov.io
    description: Production server
  - url: http://localhost:9000
    description: Moov local development setup
  # - url: https://sbx.moov.io
  #   description: Development server

tags:
  - name: Monitor
    description: TODO(adam)

paths:
# Auth routes
  /v1/users/create:
    $ref: 'https://raw.githubusercontent.com/moov-io/auth/v0.8.0/openapi.yaml#/paths/~1users~1create'
  /v1/users/login:
    $ref: 'https://raw.githubusercontent.com/moov-io/auth/v0.8.0/openapi.yaml#/paths/~1users~1login'
  /v1/users/{userID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/auth/v0.8.0/openapi.yaml#/paths/~1users~1%7BuserID%7D'
  /v1/oauth2/authorize:
    $ref: 'https://raw.githubusercontent.com/moov-io/auth/v0.8.0/openapi.yaml#/paths/~1oauth2~1authorize'
  /v1/oauth2/clients:
    $ref: 'https://raw.githubusercontent.com/moov-io/auth/v0.8.0/openapi.yaml#/paths/~1oauth2~1clients'
  /v1/oauth2/client:
    $ref: 'https://raw.githubusercontent.com/moov-io/auth/v0.8.0/openapi.yaml#/paths/~1oauth2~1client'
  /v1/oauth2/token:
    $ref: 'https://raw.githubusercontent.com/moov-io/auth/v0.8.0/openapi.yaml#/paths/~1oauth2~1token'

# ACH Files
  /v1/ach/files:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files'
  /v1/ach/files/create:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files~1create'
  /v1/ach/files/{fileID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files~1%7BfileID%7D'
  /v1/ach/files/{fileID}/contents:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files~1%7BfileID%7D~1contents'
  /v1/ach/files/{fileID}/validate:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files~1%7BfileID%7D~1validate'
  /v1/ach/files/{fileID}/segment:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files~1%7BfileID%7D~1segment'
  /v1/ach/files/{fileID}/batches:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files~1%7BfileID%7D~1batches'
  /v1/ach/files/{fileID}/batches/{batchID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/paths/~1files~1%7BfileID%7D~1batches~1%7BbatchID%7D'

# Paygate Routes
  /v1/ach/originators:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1originators'
  /v1/ach/originators/{originatorID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1originators~1%7BoriginatorID%7D'
  /v1/ach/receivers:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1receivers'
  /v1/ach/receivers/{receiverID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1receivers~1%7BreceiverID%7D'
  /v1/ach/depositories:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1depositories'
  /v1/ach/depositories/{depositoryID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1depositories~1%7BdepositoryID%7D'
  /v1/ach/depositories/{depositoryID}/micro-deposits:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1depositories~1%7BdepositoryID%7D~1micro-deposits'
  /v1/ach/depositories/{depositoryID}/micro-deposits/confirm:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1depositories~1%7BdepositoryID%7D~1micro-deposits~1confirm'
  /v1/ach/transfers:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1transfers'
  /v1/ach/transfers/batch:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1transfers~1batch'
  /v1/ach/transfers/{transferID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1transfers~1%7BtransferID%7D'
  /v1/ach/transfers/{transferID}/failed:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1transfers~1%7BtransferID%7D~1failed'
  /v1/ach/transfers/{transferID}/files:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1transfers~1%7BtransferID%7D~1files'
  /v1/ach/transfers/{transferID}/events:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1transfers~1%7BtransferID%7D~1events'
  /v1/ach/events:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1events'
  /v1/ach/events/{eventID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1events~1%7BeventID%7D'
  /v1/ach/gateways:
    $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/openapi.yaml#/paths/~1gateways'

  # Watchmanendpoints
  /v1/watchman/companies/{companyID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1companies~1%7BcompanyID%7D'
  /v1/watchman/companies/{companyID}/watch:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1companies~1%7BcompanyID%7D~1watch'
  /v1/watchman/companies/{companyID}/watch/{watchID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1companies~1%7BcompanyID%7D~1watch~1%7BwatchID%7D'
  /v1/watchman/companies/watch:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1companies~1watch'
  /v1/watchman/companies/watch/{watchID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1companies~1watch~1%7BwatchID%7D'
  # OFAC Customer Endpoints
  /v1/watchman/ofac/customers/{customerID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1customers~1%7BcustomerID%7D'
  /v1/watchman/ofac/customers/{customerID}/watch:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1customers~1%7BcustomerID%7D~1watch'
  /v1/watchman/ofac/customers/{customerID}/watch/{watchID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1customers~1%7BcustomerID%7D~1watch~1%7BwatchID%7D'
  /v1/watchman/ofac/customers/watch:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1customers~1watch'
  /v1/watchman/ofac/customers/watch/{watchID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1customers~1watch~1%7BwatchID%7D'
  # Other Endpoints
  /v1/watchman/ofac/downloads:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1downloads'
  /v1/watchman/ofac/search:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1search'
  /v1/watchman/ofac/sdn/{sdnID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1sdn~1%7BsdnID%7D'
  /v1/watchman/ofac/sdn/{sdnID}/alts:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1sdn~1%7BsdnID%7D~1alts'
  /v1/watchman/ofac/sdn/{sdnID}/addresses:
    $ref: 'https://raw.githubusercontent.com/moov-io/watchman/master/openapi.yaml#/paths/~1ofac~1sdn~1%7BsdnID%7D~1addresses'

# FED endpoints
  /v1/fed/ach/search:
    $ref: 'https://raw.githubusercontent.com/moov-io/fed/master/openapi.yaml#/paths/~1fed~1ach~1search'
  /v1/fed/wire/search:
    $ref: 'https://raw.githubusercontent.com/moov-io/fed/master/openapi.yaml#/paths/~1fed~1wire~1search'

# Accounts Endpoints
  /v1/accounts:
    $ref: 'https://raw.githubusercontent.com/moov-io/accounts/master/openapi.yaml#/paths/~1accounts'
  /v1/accounts/search:
    $ref: 'https://raw.githubusercontent.com/moov-io/accounts/master/openapi.yaml#/paths/~1accounts~1search'
  /v1/accounts/transactions:
    $ref: 'https://raw.githubusercontent.com/moov-io/accounts/master/openapi.yaml#/paths/~1accounts~1transactions'
  /v1/accounts/{accountID}/transactions:
    $ref: 'https://raw.githubusercontent.com/moov-io/accounts/master/openapi.yaml#/paths/~1accounts~1%7BaccountID%7D~1transactions'

# Customer endpoint
  /v1/customers:
    $ref: 'https://raw.githubusercontent.com/moov-io/customers/master/openapi.yaml#/paths/~1customers'
  /v1/customers/{customerID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/customers/master/openapi.yaml#/paths/~1customers~1%7BcustomerID%7D'
  /v1/customers/{customerID}/documents:
    $ref: 'https://raw.githubusercontent.com/moov-io/customers/master/openapi.yaml#/paths/~1customers~1%7BcustomerID%7D~1documents'
  /v1/customers/{customerID}/documents/{documentID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/customers/master/openapi.yaml#/paths/~1customers~1%7BcustomerID%7D~1documents~1%7BdocumentID%7D'

# ImageCashLetter endpoints
  /v1/imagecashletter/files:
    $ref: 'https://raw.githubusercontent.com/moov-io/imagecashletter/master/openapi.yaml#/paths/~1files'
  /v1/imagecashletter/files/create:
    $ref: 'https://raw.githubusercontent.com/moov-io/imagecashletter/master/openapi.yaml#/paths/~1files~1create'
  /v1/imagecashletter/files/{fileID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/imagecashletter/master/openapi.yaml#/paths/~1files~1%7BfileID%7D'
  /v1/imagecashletter/files/{fileID}/contents:
    $ref: 'https://raw.githubusercontent.com/moov-io/imagecashletter/master/openapi.yaml#/paths/~1files~1%7BfileID%7D~1contents'
  /v1/imagecashletter/files/{fileID}/validate:
    $ref: 'https://raw.githubusercontent.com/moov-io/imagecashletter/master/openapi.yaml#/paths/~1files~1%7BfileID%7D~1validate'
  /v1/imagecashletter/files/{fileID}/cashLetters:
    $ref: 'https://raw.githubusercontent.com/moov-io/imagecashletter/master/openapi.yaml#/paths/~1files~1%7BfileID%7D~1cashLetters'
  /v1/imagecashletter/files/{fileID}/cashLetters/{cashLetterID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/imagecashletter/master/openapi.yaml#/paths/~1files~1%7BfileID%7D~1cashLetters~1%7BcashLetterID%7D'

  # wire endpoints
  /v1/wire/files:
    $ref: 'https://raw.githubusercontent.com/moov-io/wire/master/openapi.yaml#/paths/~1files'
  /v1/wire/files/create:
    $ref: 'https://raw.githubusercontent.com/moov-io/wire/master/openapi.yaml#/paths/~1files~1create'
  /v1/wire/files/{fileID}:
    $ref: 'https://raw.githubusercontent.com/moov-io/wire/master/openapi.yaml#/paths/~1files~1%7BfileID%7D'
  /v1/wire/files/{fileID}/contents:
    $ref: 'https://raw.githubusercontent.com/moov-io/wire/master/openapi.yaml#/paths/~1files~1%7BfileID%7D~1contents'
  /v1/wire/files/{fileID}/validate:
    $ref: 'https://raw.githubusercontent.com/moov-io/wire/master/openapi.yaml#/paths/~1files~1%7BfileID%7D~1validate'
  /v1/wire/files/{fileID}/FEDWireMessage:
    $ref: 'https://raw.githubusercontent.com/moov-io/wire/master/openapi.yaml#/paths/~1files~1%7BfileID%7D~1FEDWireMessage'

# Ping Routes (Used to ensure app is running, but apps likely support /ready and /live as well)
  /v1/ach/ping:
    get:
      tags: ['Monitor']
      operationId: pingACH
      summary: Ping ACH
      description: Check that the moov-io/ach service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/auth/ping:
    get:
      tags: ['Monitor']
      operationId: pingAuth
      summary: Ping Auth
      description: Check that the moov-io/auth service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/fed/ping:
    get:
      tags: ['Monitor']
      operationId: pingFED
      summary: Ping Fed
      description: Check that the moov-io/fed service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/accounts/ping:
    get:
      tags: ['Monitor']
      operationId: pingAccounts
      summary: Ping Accounts
      description: Check that the moov-io/accounts service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/customers/ping:
    get:
      tags: ['Monitor']
      operationId: pingCustomers
      summary: Ping Customers
      description: Check that the moov-io/customers service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/watchman/ping:
    get:
      tags: ['Monitor']
      operationId: pingWatchman
      summary: Ping Watchman
      description: Check that the moov-io/watchman service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/imagecashletter/ping:
    get:
      tags: ['Monitor']
      operationId: pingImageCashLetter
      summary: Ping ICL
      description: Check that the moov-io/imagecashletter service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/paygate/ping:
    get:
      tags: ['Monitor']
      operationId: pingPaygate
      summary: Ping PayGate
      description: Check that the moov-io/paygate service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
  /v1/wire/ping:
    get:
      tags: ['Monitor']
      operationId: pingWire
      summary: Ping Wire
      description: Check that the moov-io/wire service is running
      parameters:
        - $ref: '#/components/parameters/requestID'
      responses:
        '200':
          description: Service is running properly
          content:
            text/plain:
              schema:
                type: string
                example: PONG
components:
  parameters:
    requestID:
      in: header
      name: X-Request-ID
      description: Optional Request ID allows application developer to trace requests through the systems logs
      example: rs4f9915
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api.moov.io/v1/oauth2/token
          # TODO(adam): more fine grained controls..
          scopes: {}
    cookieAuth:
      type: apiKey
      in: header
      name: Cookie
      description: moov_auth Cookie header
      # We should be able to use 'in: cookie'
      # https://github.com/OpenAPITools/openapi-generator/issues/208
      # in: cookie
      # name: moov_auth
